#pragma once

#include <Windows.h>

typedef enum __tagWINDOWCOMPOSITIONATTRIB {
  WCA_UNDEFINED = 0,
  WCA_NCRENDERING_ENABLED = 1,
  WCA_NCRENDERING_POLICY = 2,
  WCA_TRANSITIONS_FORCEDISABLED = 3,
  WCA_ALLOW_NCPAINT = 4,
  WCA_CAPTION_BUTTON_BOUNDS = 5,
  WCA_NONCLIENT_RTL_LAYOUT = 6,
  WCA_FORCE_ICONIC_REPRESENTATION = 7,
  WCA_EXTENDED_FRAME_BOUNDS = 8,
  WCA_HAS_ICONIC_BITMAP = 9,
  WCA_THEME_ATTRIBUTES = 10,
  WCA_NCRENDERING_EXILED = 11,
  WCA_NCADORNMENTINFO = 12,
  WCA_EXCLUDED_FROM_LIVEPREVIEW = 13,
  WCA_VIDEO_OVERLAY_ACTIVE = 14,
  WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 15,
  WCA_DISALLOW_PEEK = 16,
  WCA_CLOAK = 17,
  WCA_CLOAKED = 18,
  WCA_ACCENT_POLICY = 19,
  WCA_FREEZE_REPRESENTATION = 20,
  WCA_EVER_UNCLOAKED = 21,
  WCA_VISUAL_OWNER = 22,
  WCA_LAST = 23
} WINDOWCOMPOSITIONATTRIB;

typedef struct __tagWINDOWCOMPOSITIONATTRIBDATA {
  WINDOWCOMPOSITIONATTRIB Attrib;
  PVOID pvData;
  SIZE_T cbData;
} WINDOWCOMPOSITIONATTRIBDATA;

typedef enum __tagACCENT_FLAG {
  ACCENT_NONE,
  ACCENT_WINDOWS11_LUMINOSITY = 0x2,
  ACCENT_BORDER_LEFT = 0x20,
  ACCENT_BORDER_TOP = 0x40,
  ACCENT_BORDER_RIGHT = 0x80,
  ACCENT_BORDER_BOTTOM = 0x100,
  ACCENT_BORDER_ALL = (ACCENT_BORDER_LEFT | ACCENT_BORDER_TOP |
                       ACCENT_BORDER_RIGHT | ACCENT_BORDER_BOTTOM)
} ACCENT_FLAG;

typedef enum __tagACCENT_STATE {
  ACCENT_DISABLED = 0,
  ACCENT_ENABLE_GRADIENT = 1,
  ACCENT_ENABLE_TRANSPARENTGRADIENT = 2,
  ACCENT_ENABLE_BLURBEHIND = 3,
  ACCENT_ENABLE_ACRYLICBLURBEHIND = 4,
  ACCENT_INVALID_STATE = 5
} ACCENT_STATE;

typedef struct __tagACCENT_POLICY {
  ACCENT_STATE AccentState;
  DWORD AccentFlags;
  DWORD GradientColor;
  DWORD AnimationId;
} ACCENT_POLICY;

WINUSERAPI
BOOL WINAPI
GetWindowCompositionAttribute(_In_ HWND hWnd,
                              _Inout_ WINDOWCOMPOSITIONATTRIBDATA* pAttrData);

typedef BOOL(WINAPI* pfnGetWindowCompositionAttribute)(
    HWND,
    WINDOWCOMPOSITIONATTRIBDATA*);

WINUSERAPI
BOOL WINAPI
SetWindowCompositionAttribute(_In_ HWND hWnd,
                              _Inout_ WINDOWCOMPOSITIONATTRIBDATA* pAttrData);

typedef BOOL(WINAPI* pfnSetWindowCompositionAttribute)(
    HWND,
    WINDOWCOMPOSITIONATTRIBDATA*);

pfnGetWindowCompositionAttribute VirtualGetWindowCompositionAttribute();
pfnSetWindowCompositionAttribute VirtualSetWindowCompositionAttribute();